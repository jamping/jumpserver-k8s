---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: jumpserver-redis-ha
    app.kubernetes.io/part-of: jumpserver
  name: jumpserver-redis-ha-server
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: jumpserver-redis-ha
  serviceName: jumpserver-redis-ha
  template:
    metadata:
      annotations:
        checksum/init-config: 06440ee4a409be2aa01dfa08c14dd964fe3bad2ada57da1a538ad5cd771a045f
        checksum/probe-config: 4b9888f173366e436f167856ee3469e8c1fd5221e29caa2129373db23578ec10
      labels:
        app.kubernetes.io/name: jumpserver-redis-ha
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: jumpserver-redis-ha
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: jumpserver-redis-ha
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - /data/conf/redis.conf
        command:
        - redis-server
        image: redis:5.0.3-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - /probes/readiness.sh
            - "6379"
          initialDelaySeconds: 15
          periodSeconds: 5
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - sh
            - /probes/readiness.sh
            - "6379"
          initialDelaySeconds: 15
          periodSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /probes
          name: probes
      - args:
        - /data/conf/sentinel.conf
        command:
        - redis-sentinel
        image: redis:5.0.3-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - /probes/readiness.sh
            - "26379"
          initialDelaySeconds: 15
          periodSeconds: 5
        name: sentinel
        ports:
        - containerPort: 26379
          name: sentinel
        readinessProbe:
          exec:
            command:
            - sh
            - /probes/readiness.sh
            - "26379"
          initialDelaySeconds: 15
          periodSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /probes
          name: probes
      initContainers:
      - args:
        - /readonly-config/init.sh
        command:
        - sh
        env:
        - name: SENTINEL_ID_0
          value: e791a161cb06f0d3eb0cc392117d34cf0eae9d71
        - name: SENTINEL_ID_1
          value: d9b3204a90597a7500530efd881942d8145996ac
        - name: SENTINEL_ID_2
          value: d9deb539c0402841c2492e9959c8086602fa4284
        image: redis:5.0.3-alpine
        imagePullPolicy: IfNotPresent
        name: config-init
        resources: {}
        volumeMounts:
        - mountPath: /readonly-config
          name: config
          readOnly: true
        - mountPath: /data
          name: data
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: jumpserver-redis-ha
      volumes:
      - configMap:
          name: jumpserver-redis-ha-configmap
        name: config
      - configMap:
          name: jumpserver-redis-ha-probes
        name: probes
      - emptyDir: {}
        name: data
  updateStrategy:
    type: RollingUpdate